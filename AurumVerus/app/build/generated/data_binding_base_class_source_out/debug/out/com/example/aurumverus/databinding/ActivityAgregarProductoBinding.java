// Generated by view binder compiler. Do not edit!
package com.example.aurumverus.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.SwitchCompat;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aurumverus.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAgregarProductoBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextInputLayout TIDescripcionProd;

  @NonNull
  public final TextInputLayout TIDescuento;

  @NonNull
  public final TextInputLayout TINombreProd;

  @NonNull
  public final TextInputLayout TINotaDesc;

  @NonNull
  public final TextInputLayout TIPrecio;

  @NonNull
  public final MaterialButton btnAgregarProd;

  @NonNull
  public final EditText edtxDescripcionProd;

  @NonNull
  public final EditText edtxNombreProd;

  @NonNull
  public final EditText edtxNotaDesc;

  @NonNull
  public final EditText edtxPrecio;

  @NonNull
  public final EditText edtxPrecioDesc;

  @NonNull
  public final RelativeLayout imagenRL;

  @NonNull
  public final RecyclerView imagenesProductos;

  @NonNull
  public final AppCompatImageView imgAgregarProd;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final SwitchCompat switchDesc;

  @NonNull
  public final RelativeLayout toolbarRL;

  private ActivityAgregarProductoBinding(@NonNull RelativeLayout rootView,
      @NonNull TextInputLayout TIDescripcionProd, @NonNull TextInputLayout TIDescuento,
      @NonNull TextInputLayout TINombreProd, @NonNull TextInputLayout TINotaDesc,
      @NonNull TextInputLayout TIPrecio, @NonNull MaterialButton btnAgregarProd,
      @NonNull EditText edtxDescripcionProd, @NonNull EditText edtxNombreProd,
      @NonNull EditText edtxNotaDesc, @NonNull EditText edtxPrecio,
      @NonNull EditText edtxPrecioDesc, @NonNull RelativeLayout imagenRL,
      @NonNull RecyclerView imagenesProductos, @NonNull AppCompatImageView imgAgregarProd,
      @NonNull RelativeLayout main, @NonNull SwitchCompat switchDesc,
      @NonNull RelativeLayout toolbarRL) {
    this.rootView = rootView;
    this.TIDescripcionProd = TIDescripcionProd;
    this.TIDescuento = TIDescuento;
    this.TINombreProd = TINombreProd;
    this.TINotaDesc = TINotaDesc;
    this.TIPrecio = TIPrecio;
    this.btnAgregarProd = btnAgregarProd;
    this.edtxDescripcionProd = edtxDescripcionProd;
    this.edtxNombreProd = edtxNombreProd;
    this.edtxNotaDesc = edtxNotaDesc;
    this.edtxPrecio = edtxPrecio;
    this.edtxPrecioDesc = edtxPrecioDesc;
    this.imagenRL = imagenRL;
    this.imagenesProductos = imagenesProductos;
    this.imgAgregarProd = imgAgregarProd;
    this.main = main;
    this.switchDesc = switchDesc;
    this.toolbarRL = toolbarRL;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAgregarProductoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAgregarProductoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_agregar_producto, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAgregarProductoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.TI_DescripcionProd;
      TextInputLayout TIDescripcionProd = ViewBindings.findChildViewById(rootView, id);
      if (TIDescripcionProd == null) {
        break missingId;
      }

      id = R.id.TI_Descuento;
      TextInputLayout TIDescuento = ViewBindings.findChildViewById(rootView, id);
      if (TIDescuento == null) {
        break missingId;
      }

      id = R.id.TI_NombreProd;
      TextInputLayout TINombreProd = ViewBindings.findChildViewById(rootView, id);
      if (TINombreProd == null) {
        break missingId;
      }

      id = R.id.TI_NotaDesc;
      TextInputLayout TINotaDesc = ViewBindings.findChildViewById(rootView, id);
      if (TINotaDesc == null) {
        break missingId;
      }

      id = R.id.TI_Precio;
      TextInputLayout TIPrecio = ViewBindings.findChildViewById(rootView, id);
      if (TIPrecio == null) {
        break missingId;
      }

      id = R.id.btnAgregarProd;
      MaterialButton btnAgregarProd = ViewBindings.findChildViewById(rootView, id);
      if (btnAgregarProd == null) {
        break missingId;
      }

      id = R.id.edtxDescripcionProd;
      EditText edtxDescripcionProd = ViewBindings.findChildViewById(rootView, id);
      if (edtxDescripcionProd == null) {
        break missingId;
      }

      id = R.id.edtxNombreProd;
      EditText edtxNombreProd = ViewBindings.findChildViewById(rootView, id);
      if (edtxNombreProd == null) {
        break missingId;
      }

      id = R.id.edtxNotaDesc;
      EditText edtxNotaDesc = ViewBindings.findChildViewById(rootView, id);
      if (edtxNotaDesc == null) {
        break missingId;
      }

      id = R.id.edtxPrecio;
      EditText edtxPrecio = ViewBindings.findChildViewById(rootView, id);
      if (edtxPrecio == null) {
        break missingId;
      }

      id = R.id.edtxPrecioDesc;
      EditText edtxPrecioDesc = ViewBindings.findChildViewById(rootView, id);
      if (edtxPrecioDesc == null) {
        break missingId;
      }

      id = R.id.imagenRL;
      RelativeLayout imagenRL = ViewBindings.findChildViewById(rootView, id);
      if (imagenRL == null) {
        break missingId;
      }

      id = R.id.imagenesProductos;
      RecyclerView imagenesProductos = ViewBindings.findChildViewById(rootView, id);
      if (imagenesProductos == null) {
        break missingId;
      }

      id = R.id.imgAgregarProd;
      AppCompatImageView imgAgregarProd = ViewBindings.findChildViewById(rootView, id);
      if (imgAgregarProd == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.switchDesc;
      SwitchCompat switchDesc = ViewBindings.findChildViewById(rootView, id);
      if (switchDesc == null) {
        break missingId;
      }

      id = R.id.toolbarRL;
      RelativeLayout toolbarRL = ViewBindings.findChildViewById(rootView, id);
      if (toolbarRL == null) {
        break missingId;
      }

      return new ActivityAgregarProductoBinding((RelativeLayout) rootView, TIDescripcionProd,
          TIDescuento, TINombreProd, TINotaDesc, TIPrecio, btnAgregarProd, edtxDescripcionProd,
          edtxNombreProd, edtxNotaDesc, edtxPrecio, edtxPrecioDesc, imagenRL, imagenesProductos,
          imgAgregarProd, main, switchDesc, toolbarRL);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
