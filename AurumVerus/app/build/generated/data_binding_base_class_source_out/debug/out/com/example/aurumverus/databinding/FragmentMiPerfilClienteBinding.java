// Generated by view binder compiler. Do not edit!
package com.example.aurumverus.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aurumverus.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMiPerfilClienteBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnGuardarPerfil;

  @NonNull
  public final EditText edtDireccionPerfil;

  @NonNull
  public final EditText edtNombrePerfil;

  @NonNull
  public final EditText edtTelefonoPerfil;

  private FragmentMiPerfilClienteBinding(@NonNull ScrollView rootView,
      @NonNull Button btnGuardarPerfil, @NonNull EditText edtDireccionPerfil,
      @NonNull EditText edtNombrePerfil, @NonNull EditText edtTelefonoPerfil) {
    this.rootView = rootView;
    this.btnGuardarPerfil = btnGuardarPerfil;
    this.edtDireccionPerfil = edtDireccionPerfil;
    this.edtNombrePerfil = edtNombrePerfil;
    this.edtTelefonoPerfil = edtTelefonoPerfil;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMiPerfilClienteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMiPerfilClienteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_mi_perfil_cliente, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMiPerfilClienteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnGuardarPerfil;
      Button btnGuardarPerfil = ViewBindings.findChildViewById(rootView, id);
      if (btnGuardarPerfil == null) {
        break missingId;
      }

      id = R.id.edtDireccionPerfil;
      EditText edtDireccionPerfil = ViewBindings.findChildViewById(rootView, id);
      if (edtDireccionPerfil == null) {
        break missingId;
      }

      id = R.id.edtNombrePerfil;
      EditText edtNombrePerfil = ViewBindings.findChildViewById(rootView, id);
      if (edtNombrePerfil == null) {
        break missingId;
      }

      id = R.id.edtTelefonoPerfil;
      EditText edtTelefonoPerfil = ViewBindings.findChildViewById(rootView, id);
      if (edtTelefonoPerfil == null) {
        break missingId;
      }

      return new FragmentMiPerfilClienteBinding((ScrollView) rootView, btnGuardarPerfil,
          edtDireccionPerfil, edtNombrePerfil, edtTelefonoPerfil);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
