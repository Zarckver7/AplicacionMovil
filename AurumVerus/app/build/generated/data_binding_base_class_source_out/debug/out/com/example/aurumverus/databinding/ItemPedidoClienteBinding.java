// Generated by view binder compiler. Do not edit!
package com.example.aurumverus.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aurumverus.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPedidoClienteBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView iconEstadoPedido;

  @NonNull
  public final TextView txtEstadoTexto;

  @NonNull
  public final TextView txtFechaPedido;

  @NonNull
  public final TextView txtNombreProducto;

  @NonNull
  public final TextView txtPrecioProducto;

  private ItemPedidoClienteBinding(@NonNull CardView rootView, @NonNull ImageView iconEstadoPedido,
      @NonNull TextView txtEstadoTexto, @NonNull TextView txtFechaPedido,
      @NonNull TextView txtNombreProducto, @NonNull TextView txtPrecioProducto) {
    this.rootView = rootView;
    this.iconEstadoPedido = iconEstadoPedido;
    this.txtEstadoTexto = txtEstadoTexto;
    this.txtFechaPedido = txtFechaPedido;
    this.txtNombreProducto = txtNombreProducto;
    this.txtPrecioProducto = txtPrecioProducto;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPedidoClienteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPedidoClienteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_pedido_cliente, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPedidoClienteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iconEstadoPedido;
      ImageView iconEstadoPedido = ViewBindings.findChildViewById(rootView, id);
      if (iconEstadoPedido == null) {
        break missingId;
      }

      id = R.id.txtEstadoTexto;
      TextView txtEstadoTexto = ViewBindings.findChildViewById(rootView, id);
      if (txtEstadoTexto == null) {
        break missingId;
      }

      id = R.id.txtFechaPedido;
      TextView txtFechaPedido = ViewBindings.findChildViewById(rootView, id);
      if (txtFechaPedido == null) {
        break missingId;
      }

      id = R.id.txtNombreProducto;
      TextView txtNombreProducto = ViewBindings.findChildViewById(rootView, id);
      if (txtNombreProducto == null) {
        break missingId;
      }

      id = R.id.txtPrecioProducto;
      TextView txtPrecioProducto = ViewBindings.findChildViewById(rootView, id);
      if (txtPrecioProducto == null) {
        break missingId;
      }

      return new ItemPedidoClienteBinding((CardView) rootView, iconEstadoPedido, txtEstadoTexto,
          txtFechaPedido, txtNombreProducto, txtPrecioProducto);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
