// Generated by view binder compiler. Do not edit!
package com.example.aurumverus.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aurumverus.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginClienteBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialButton btnLoginV;

  @NonNull
  public final EditText edtxContraseAC;

  @NonNull
  public final EditText edtxCorreoC;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final TextView tvRegistrarseC;

  private ActivityLoginClienteBinding(@NonNull RelativeLayout rootView,
      @NonNull MaterialButton btnLoginV, @NonNull EditText edtxContraseAC,
      @NonNull EditText edtxCorreoC, @NonNull RelativeLayout main,
      @NonNull TextView tvRegistrarseC) {
    this.rootView = rootView;
    this.btnLoginV = btnLoginV;
    this.edtxContraseAC = edtxContraseAC;
    this.edtxCorreoC = edtxCorreoC;
    this.main = main;
    this.tvRegistrarseC = tvRegistrarseC;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginClienteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginClienteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login_cliente, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginClienteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLoginV;
      MaterialButton btnLoginV = ViewBindings.findChildViewById(rootView, id);
      if (btnLoginV == null) {
        break missingId;
      }

      id = R.id.edtxContrase√±aC;
      EditText edtxContraseAC = ViewBindings.findChildViewById(rootView, id);
      if (edtxContraseAC == null) {
        break missingId;
      }

      id = R.id.edtxCorreoC;
      EditText edtxCorreoC = ViewBindings.findChildViewById(rootView, id);
      if (edtxCorreoC == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.tvRegistrarseC;
      TextView tvRegistrarseC = ViewBindings.findChildViewById(rootView, id);
      if (tvRegistrarseC == null) {
        break missingId;
      }

      return new ActivityLoginClienteBinding((RelativeLayout) rootView, btnLoginV, edtxContraseAC,
          edtxCorreoC, main, tvRegistrarseC);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
